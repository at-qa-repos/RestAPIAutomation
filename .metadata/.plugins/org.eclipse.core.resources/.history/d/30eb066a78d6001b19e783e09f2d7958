package com.qa.weatherApi.test;

import static io.restassured.RestAssured.given;

import org.testng.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import com.qa.requestManager.GetRequestManager;
import com.qa.testBase.BaseTest;
import com.qa.utils.ExcelUtils;

import io.restassured.response.Response;

public class GetRequestTest extends BaseTest{

	private static String BASE_URL = properties.getConfig("BASE_URL");

	@Test(dataProvider="userDataProvider")
	public void verifyUser(String userId, String country) throws Exception{
		
		//int numOfDaysToTest = Integer.parseInt(properties.getConfig("NUMBER_OF_DAYS_TO_TEST"));
		GetRequestManager requestManager;
		int responseCode=0;
		try {
			startTest(String.format(properties.getLogMessage("VerifyWeatherTest"), city, country), String.format(properties.getLogMessage("VerifyWeatherTestDescription"), numOfDaysToTest, city, country));
			setTestCategory(properties.getLogMessage("VerifyWeatherTestCategory"));	
			logInfo(String.format(properties.getLogMessage("VerifyRainfallTestStart"), numOfDaysToTest, city, country));
			/*Response response  = given().
					pathParams(properties.getConstant("City"), city, properties.getConstant("Country"), country, properties.getConstant("ApiKey"), properties.getConfig("API_KEY")).
					when().
					get(BASE_URL+"/forecast/daily?city={city}&country={country}&key={apiKey}");*/
			Response response  = given().when().
					get(BASE_URL);
			responseCode=response.getStatusCode();
			System.out.println("responseCode---------------"+responseCode);
			if(responseCode==200){
				requestManager = new GetRequestManager();
				requestManager.verifyRainFallInGivenNoOfDays(response, numOfDaysToTest, city, country);
			}
			else{
				logError(String.format(properties.getLogMessage("InvalidResponse"), responseCode));
				Assert.assertTrue(responseCode==200);
			}
		} catch (Exception e) {
			logError(properties.getLogMessage("ErrorOccurred"));
			e.printStackTrace();
			throw e;
		}
	}

	@DataProvider(name="userDataProvider")
	public String[][] getWeatherData() throws Exception{	
		try {
			String testDataFile = System.getProperty("user.dir") + properties.getConfig("TESTDATA_EXCELFILE_PATH");
			int rowNum = ExcelUtils.getRowCount(testDataFile, properties.getConfig("TESTDATA_SHEET_NAME"));
			int colCount = ExcelUtils.getCellCount(testDataFile, properties.getConfig("TESTDATA_SHEET_NAME"), rowNum);
			String weatherData[][] = new String[rowNum][colCount];
			for(int i=1;i<=rowNum;i++){
				for(int j=0;j<colCount;j++){
					weatherData[i-1][j] = ExcelUtils.getCellData(testDataFile, properties.getConfig("TESTDATA_SHEET_NAME"), i, j);
				}
			}
			return (weatherData);
		} catch (Exception e) {
			throw e;
		}
	}

}
