package com.qa.usersApi.test;

import static io.restassured.RestAssured.given;

import java.util.HashMap;

import org.testng.Assert;
import org.testng.annotations.Test;

import com.qa.requestManager.GetRequestManager;
import com.qa.testBase.BaseTest;
import com.qa.utils.ExcelUtils;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import io.restassured.response.ResponseBody;

public class PostRequestTest extends BaseTest{

	private static String BASE_URL = properties.getConfig("BASE_URL");
	HashMap<String, String> testData;
	
	@Test
	public void verifyCreateUserTest() throws Exception{
		testData = ExcelUtils.getTestCaseData(System.getProperty("user.dir") + properties.getConfig("TESTDATA_EXCELFILE_PATH"), properties.getConfig("EXCEL_SHEETNAME"), "TC_01");
		String firstName = testData.get("FIRSTNAME");
		String lastName = testData.get("LASTNAME");
		String email = testData.get("EMAIL");
		String dateOfBirth = testData.get("DATEOFBIRTH");
		String firstNameResponse = "";
		String lastNameResponse = "";
		String emailResponse = "";
		String dateOfBirthResponse = "";
		String requestBody = "{\n" +
	            "  \"firstName\": \""+ firstName +"\",\n" +
	            "  \"lastName\": \""+ lastName +"\",\n" +
	            "  \"email\": \""+ email + "\",\n" +
	            "  \"dayOfBirth\": \""+ dateOfBirth +"\" \n}";
		GetRequestManager requestManager;
		int responseCode=0;
		try {
			/*startTest(String.format(properties.getLogMessage("VerifyUserTest"), userId), String.format(properties.getLogMessage("VerifyUserTestDescription"), userId));
			setTestCategory(properties.getLogMessage("VerifyUserTestCategory"));	
			logInfo(String.format(properties.getLogMessage("VerifyUserTestStart"), userId));*/
			RestAssured.baseURI = BASE_URL;
			Response response = given()
	                .header("Content-type", "application/json")
	                .and()
	                .body(requestBody)
	                .when()
	                .post("/users")
	                .then()
	                .extract().response();
			responseCode=response.getStatusCode();
			System.out.println("responseCode---------------"+responseCode);
			ResponseBody body = response.getBody();
			System.out.println("--------"+body.asString());
			if(responseCode==201){
				firstNameResponse = response.jsonPath().getString("firstName");
				lastNameResponse = response.jsonPath().getString("lastName");
				emailResponse = response.jsonPath().getString("email");
				dateOfBirthResponse = response.jsonPath().getString("dateOfBirth");
				requestManager = new GetRequestManager();
				requestManager.verifyUserDetails(response, firstName, lastName, email, dateOfBirth);
			}
			else{
				logError(String.format(properties.getLogMessage("InvalidResponse"), responseCode));
				Assert.assertTrue(responseCode==201);
			}
		} catch (Exception e) {
			logError(properties.getLogMessage("ErrorOccurred"));
			e.printStackTrace();
			throw e;
		}
	}

}
