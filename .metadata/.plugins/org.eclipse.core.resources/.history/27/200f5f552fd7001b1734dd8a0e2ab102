package com.qa.usersApi.test;

import static io.restassured.RestAssured.given;

import java.util.HashMap;

import org.testng.Assert;
import org.testng.annotations.Test;

import com.qa.requestManager.GetRequestManager;
import com.qa.testBase.BaseTest;
import com.qa.utils.ExcelUtils;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import io.restassured.response.ResponseBody;

public class PostRequestTest extends BaseTest{

	private static String BASE_URL = properties.getConfig("BASE_URL");
	HashMap<String, String> testData;
	
	@Test
	public void verifyCreateUserTest() throws Exception{
		testData = ExcelUtils.GetTestCaseData(System.getProperty("user.dir") + properties.getConfig("TESTDATA_EXCELFILE_PATH"), properties.getConfig("EXCEL_SHEETNAME"), "TC_50");
		String firstName = "";
		String lastName = "";
		String email = "";
		String dateOfBirth = ""; 
		String requestBody = "{\n" +
	            "  \"firstName\": \"Atul2\",\n" +
	            "  \"lastName\": \"Ranjan\",\n" +
	            "  \"email\": \"workingemailc-1@gmail.com\",\n" +
	            "  \"dayOfBirth\": \"1991-06-27\" \n}";
		GetRequestManager requestManager;
		int responseCode=0;
		try {
			/*startTest(String.format(properties.getLogMessage("VerifyUserTest"), userId), String.format(properties.getLogMessage("VerifyUserTestDescription"), userId));
			setTestCategory(properties.getLogMessage("VerifyUserTestCategory"));	
			logInfo(String.format(properties.getLogMessage("VerifyUserTestStart"), userId));*/
			RestAssured.baseURI = BASE_URL;
			Response response = given()
	                .header("Content-type", "application/json")
	                .and()
	                .body(requestBody)
	                .when()
	                .post("/users")
	                .then()
	                .extract().response();
			responseCode=response.getStatusCode();
			System.out.println("responseCode---------------"+responseCode);
			ResponseBody body = response.getBody();
			System.out.println("--------"+body.asString());
			if(responseCode==201){
				firstName = response.jsonPath().getString("firstName");
				lastName = response.jsonPath().getString("lastName");
				email = response.jsonPath().getString("email");
				dateOfBirth = response.jsonPath().getString("dateOfBirth");
				requestManager = new GetRequestManager();
				requestManager.verifyUserDetails(response, firstName, lastName, email, dateOfBirth);
			}
			else{
				logError(String.format(properties.getLogMessage("InvalidResponse"), responseCode));
				Assert.assertTrue(responseCode==201);
			}
		} catch (Exception e) {
			logError(properties.getLogMessage("ErrorOccurred"));
			e.printStackTrace();
			throw e;
		}
	}

}
